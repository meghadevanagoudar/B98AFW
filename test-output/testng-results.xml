<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="10" passed="3" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Mkart | OSPOS | Login]]>
    </line>
    <line>
      <![CDATA[Mkart | OSPOS | Login]]>
    </line>
    <line>
      <![CDATA[HomePage is Displayed]]>
    </line>
    <line>
      <![CDATA[ErrMsg is Displayed:Invalid username and/or password.]]>
    </line>
  </reporter-output>
  <suite started-at="2024-03-27T11:56:03 IST" name="AutomationSuite" finished-at="2024-03-27T11:56:49 IST" duration-ms="45882">
    <groups>
    </groups>
    <test started-at="2024-03-27T11:56:03 IST" name="RegressionTestOnEdge" finished-at="2024-03-27T11:56:49 IST" duration-ms="45882">
      <class name="script.InvalidLogin">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:script.InvalidLogin@47e2e487]" started-at="2024-03-27T11:56:38 IST" name="preCondition" finished-at="2024-03-27T11:56:44 IST" duration-ms="6440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.InvalidLogin.testInvalidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[http://localhost:4444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testInvalidLogin()[pri:2, instance:script.InvalidLogin@47e2e487]" started-at="2024-03-27T11:56:44 IST" name="testInvalidLogin" finished-at="2024-03-27T11:56:45 IST" duration-ms="1151" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[ErrMsg is Displayed:Invalid username and/or password.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.InvalidLogin@47e2e487]" started-at="2024-03-27T11:56:45 IST" name="postCondition" finished-at="2024-03-27T11:56:49 IST" duration-ms="3162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=InvalidLogin.testInvalidLogin()[pri:2, instance:script.InvalidLogin@47e2e487] output=ErrMsg is Displayed:Invalid username and/or password.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.InvalidLogin -->
      <class name="script.DemoTest2">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:script.DemoTest2@201a4587]" started-at="2024-03-27T11:56:03 IST" name="preCondition" finished-at="2024-03-27T11:56:11 IST" duration-ms="8048" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.DemoTest2.testInvalidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[http://localhost:4444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testInvalidLogin()[pri:0, instance:script.DemoTest2@201a4587]" started-at="2024-03-27T11:56:11 IST" name="testInvalidLogin" finished-at="2024-03-27T11:56:11 IST" duration-ms="76" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Mkart | OSPOS | Login]]>
            </line>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.DemoTest2@201a4587]" started-at="2024-03-27T11:56:11 IST" name="postCondition" finished-at="2024-03-27T11:56:14 IST" duration-ms="3157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=DemoTest2.testInvalidLogin()[pri:0, instance:script.DemoTest2@201a4587] output=Mkart | OSPOS | Login]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.DemoTest2 -->
      <class name="script.ValidLogin">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:script.ValidLogin@51e69659]" started-at="2024-03-27T11:56:24 IST" name="preCondition" finished-at="2024-03-27T11:56:30 IST" duration-ms="6441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.ValidLogin.testValidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[http://localhost:4444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testValidLogin()[pri:1, instance:script.ValidLogin@51e69659]" started-at="2024-03-27T11:56:30 IST" name="testValidLogin" finished-at="2024-03-27T11:56:35 IST" duration-ms="4244" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomePage is Displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.ValidLogin@51e69659]" started-at="2024-03-27T11:56:35 IST" name="postCondition" finished-at="2024-03-27T11:56:38 IST" duration-ms="3145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=ValidLogin.testValidLogin()[pri:1, instance:script.ValidLogin@51e69659] output=HomePage is Displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.ValidLogin -->
      <class name="script.DemoTest">
        <test-method is-config="true" signature="initReport()[pri:0, instance:script.DemoTest@12aba8be]" started-at="2024-03-27T11:56:02 IST" name="initReport" finished-at="2024-03-27T11:56:03 IST" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReport -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:script.DemoTest@12aba8be]" started-at="2024-03-27T11:56:14 IST" name="preCondition" finished-at="2024-03-27T11:56:20 IST" duration-ms="6452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.DemoTest.testValidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[http://localhost:4444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testValidLogin()[pri:0, instance:script.DemoTest@12aba8be]" started-at="2024-03-27T11:56:20 IST" name="testValidLogin" finished-at="2024-03-27T11:56:21 IST" duration-ms="80" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [xyz] but found [abc]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [xyz] but found [abc]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at script.DemoTest.testValidLogin(DemoTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Mkart | OSPOS | Login]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.DemoTest@12aba8be]" started-at="2024-03-27T11:56:21 IST" name="postCondition" finished-at="2024-03-27T11:56:24 IST" duration-ms="3429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=FAILURE method=DemoTest.testValidLogin()[pri:0, instance:script.DemoTest@12aba8be] output=Mkart | OSPOS | Login]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="publishReport()[pri:0, instance:script.DemoTest@12aba8be]" started-at="2024-03-27T11:56:49 IST" name="publishReport" finished-at="2024-03-27T11:56:49 IST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- script.DemoTest -->
    </test> <!-- RegressionTestOnEdge -->
  </suite> <!-- AutomationSuite -->
</testng-results>
